function start() {
    //测试注释
    this.textures = new flower.ArrayValue();
    this.list.dataProvider = this.textures;
    flower.Stage.getInstance().addChild(this);
    flower.EnterFrame.add(this.update, this);
    this.content.y = -100;
    flower.Tween.to(this.content, 0.5, {y: 0},flower.Ease.CUBIC_EASE_IN_OUT);
}

/**
 *
 * @param now
 * @param gap
 */
function update(now, gap) {
    var textures = flower.DebugInfo.textures;
    var find;
    var txtInfo;
    for (var i = 0; textures.length > i; i++) {
        find = false;
        for (var j = 0; this.textures.length > j; j++) {
            if (this.textures.getItemAt(j).url.value == textures[i].url) {
                txtInfo = this.textures.getItemAt(j);
                find = true;
                break;
            }
        }
        if (!find) {
            flower.trace("new itemRenderer", textures[i].url);
            this.textures.push(txtInfo = {
                count: new flower.IntValue(),
                url: new flower.StringValue(),
                nativeURL: new flower.StringValue()
            });
        }
        txtInfo.count.value = textures[i].count;
        txtInfo.url.value = textures[i].url;
        txtInfo.nativeURL.value = textures[i].nativeURL;
    }
    for (var i = 0; this.textures.length > i; i++) {
        find = false;
        for (var j = 0; textures.length > j; j++) {
            if (this.textures.getItemAt(i).url.value == textures[j].url) {
                find = true;
                break;
            }
        }
        if (!find) {
            flower.trace("del itemRenderer", this.textures.getItemAt(i).url.value);
            this.textures.splice(i, 1);
            i--;
        }
    }
}

function set desc(val) {
    this._desc = val;
}

function get desc() {
    return this._desc;
}

//
/**
 */