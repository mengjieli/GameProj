function init() {
    var container = this.container;
    var labels = ["x", "y", "width", "height", "scaleX", "scaleY", "left", "right", "top", "bottom", "pWidth", "pHeight", "hCenter", "vCenter", "rotation"];
    var attributes = ["x", "y", "width", "height", "scaleX", "scaleY", "left", "right", "top"
        , "bottom", "percentWidth", "percentHeight", "horizontalCenter", "verticalCenter", "rotation"];
    this.attributes = attributes;
    for (var i = 0; i < attributes.length; i++, i++) {
        var atr1 = attributes[i];
        var atr2 = attributes[i + 1];
        var label1 = labels[i];
        var label2 = labels[i + 1];
        var fxml =
            '<f:Group horizontalCenter="0" xmlns:f="flower" xmlns:s="modules/software/module.json">' +
            '<f:Label horizontalCenter="-95" width="50" text="' + label1 + '" verticalCenter="0"/>' +
            '<s:Input id="' + atr1 + 'Input" horizontalCenter="-40" width="50" verticalCenter="0"/>' +
            '<f:Label text="' + label2 + '" width="50" horizontalCenter="40" verticalCenter="0"/>' +
            '<s:Input id="' + atr2 + 'Input" horizontalCenter="95" width="50" verticalCenter="0"/>' +
            '</f:Group>';
        var ui = (new flower.UIParser()).parseUI(fxml);
        container.addChild(ui);
        this[atr1 + "Input"] = ui[atr1 + "Input"];
        this[atr2 + "Input"] = ui[atr2 + "Input"];
    }
    editor.EventManager.instance.addListener(editor.ModuleEvent.SELECT_ELEMENT, this.onSelectElement, this);
}

function onSelectElement(e) {
    this.data = e.data;
    var attributes = this.attributes;
    for (var i = 0; i < attributes.length; i++) {
        var atr = attributes[i];
        (function (atr) {
            this[atr + "Input"].bindProperty("fontColor", "{data.attributes." + atr + ".exist?'0x000000':'0xaaaaaa'}", [this]);
            this[atr + "Input"].bindProperty("text", "{data.attributesShow." + atr + "}", [this]);
            this[atr + "Input"].addListener(flower.Event.FOCUS_IN, function (e) {
                this[atr + "Input"].removeBindProperty("text");
            }.bind(this));
            var inputOver = function () {
                var text = this[atr + "Input"].text;
                if (text != "") {
                    this.data.attributes[atr].value = text;
                } else {
                    this.data.attributes[atr].value = text;
                    this.data.attributes[atr].exist.value = false;
                }
                this[atr + "Input"].bindProperty("text", "{data.attributesShow." + atr + "}", [this]);
            };
            this[atr + "Input"].addListener(flower.Event.FOCUS_OUT, function (e) {
                inputOver.apply(this);
            }.bind(this));
            this[atr + "Input"].addListener(flower.KeyboardEvent.KEY_DOWN, function (e) {
                if (e.keyCode != 13) return;
                this[atr + "Input"].inputOver();
                inputOver.apply(this);
            }.bind(this));
        }).bind(this)(atr);
    }
}