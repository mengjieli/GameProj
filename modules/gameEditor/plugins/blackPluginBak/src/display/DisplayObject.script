var DisplayObject = (function (_super) {

    __extends(DisplayObject, _super);

    function DisplayObject(data) {
        _super.call(this, data);

        var attributes = data.attributes;
        var display = data.display;
        for (var i = 0; i < attributes.length; i++) {
            var attributeName = attributes[i].name.value;
            if (display.hasMember(attributeName)) {
                this.bindProperty(attributeName, "{data.display." + attributeName + "}");
            }
        }
        this.addListener(flower.TouchEvent.TOUCH_BEGIN, this.onTouch, this);
        this.addListener(flower.TouchEvent.TOUCH_END, this.onTouch, this);
        this.addListener(flower.TouchEvent.TOUCH_MOVE, this.onTouch, this);
        this.init();
    }

    DisplayObject.prototype.init = function () {

    }

    DisplayObject.prototype.onTouch = function (e) {
        switch (e.type) {
            case flower.TouchEvent.TOUCH_BEGIN:
                module.detailPanel.data = this.data;
                showDetailPanel("UIDetail", this.data, module.detailPanel);
                break;
            case flower.TouchEvent.TOUCH_MOVE:
                break;
            case flower.TouchEvent.TOUCH_MOVE:
                break;
        }

    }

    return DisplayObject;

})(flower.Group);

module.DisplayObject = DisplayObject;