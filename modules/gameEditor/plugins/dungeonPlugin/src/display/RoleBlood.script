var RoleBlood = (function (_super) {

    __extends(RoleBlood, _super);

    function RoleBlood(data) {
        _super.call(this);

        this.data = data;

        this.width = 0;

        if (data.mapData.start.value == false) {
            this.alpha = 0;
            data.mapData.start.once(flower.Event.UPDATE, function (e) {
                flower.Tween.to(this, 0.5, {alpha: 1});
            }, this);
        }

        this.blood = this.data.hpPercent;
        this.blood2 = new flower.NumberValue(this.blood.value);
        this.blood.addListener(flower.Event.UPDATE, function (e) {
            if (this.tween) {
                this.tween.dispose();
            }
            this.tween = flower.Tween.to(this.blood2, 0.5, {value: this.blood.value});
        }, this);

        this.hp = new flower.IntValue(this.data.hp.value);
        this.data.hp.addListener(flower.Event.UPDATE, function (e) {
            if (this.tweenHp) {
                this.tweenHp.dispose();
            }
            this.tweenHp = flower.Tween.to(this.hp, 0.05, {value: this.data.hp.value});
        }, this);

        var hpWidth = 50;

        var background = new flower.Rect();
        background.width = hpWidth + 2;
        background.height = 7;
        background.lineWidth = 1;
        background.lineColor = 0x888888;
        background.fillColor = 0x333333;
        background.x = -hpWidth / 2 - 1;
        background.y = -1;
        this.addChild(background);

        var blood = new flower.Rect();
        blood.width = background.width;
        blood.height = 5;
        blood.fillColor = data.camp.value == 1 ? 0x888888 : 0x883333;
        blood.x = -hpWidth / 2;
        blood.bindProperty("width", "{blood2*" + hpWidth + "}", [this]);
        blood.bindProperty("visible", "{blood2}", [this]);
        this.addChild(blood);

        blood = new flower.Rect();
        blood.width = background.width;
        blood.height = 5;
        blood.fillColor = data.camp.value == 1 ? 0xffffff : 0xBB6666;
        blood.x = -hpWidth / 2;
        blood.bindProperty("width", "{blood*" + hpWidth + "}", [this]);
        blood.bindProperty("visible", "{blood}", [this]);
        this.addChild(blood);

        var label = new flower.Label(data.type.value + "-" + data.tag.value);
        label.fontColor = data.camp.value == 1 ? 0xdddddd : 0xdd8888;
        label.horizontalCenter = 0;
        label.y = -16;
        this.addChild(label);
        label.bindProperty("text", "{hp}", [this]);
    }

    RoleBlood.prototype.init = function () {
        this.playAction(RoleBlood.Action.STAND, RoleBlood.Dir.Right);
    }

    return RoleBlood;
})(flower.Group);

module.RoleBlood = RoleBlood;